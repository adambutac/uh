import java.awt.RenderingHints;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.BufferedImageOp;
import java.awt.image.ColorModel;

public class WeirdFilter implements BufferedImageOp{
    public WeirdFilter(){
        super();
    }

    @Override
    public BufferedImage createCompatibleDestImage(BufferedImage arg0, ColorModel arg1) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public BufferedImage filter(BufferedImage arg0, BufferedImage arg1) {

        return null;
    }

    private int processPixel(RGBPixel[] chunk){      
        RGBPixel newpixel = new RGBPixel();

        for(RGBPixel neighbor: chunk){
          newpixel.red   += Math.max(neighbor.red, 40) + 10*Math.cos(neighbor.red);
          newpixel.green += Math.min(neighbor.green, 100);
          newpixel.blue  += Math.min(Math.exp(neighbor.blue), 40);
        }

        newpixel.red   /= chunk.length;
        newpixel.green /= chunk.length;
        newpixel.blue  /= chunk.length;
        return newpixel.asInt();
    }

    @Override
    public Rectangle2D getBounds2D(BufferedImage arg0) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public Point2D getPoint2D(Point2D arg0, Point2D arg1) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public RenderingHints getRenderingHints() {
        // TODO Auto-generated method stub
        return null;
    }
}
